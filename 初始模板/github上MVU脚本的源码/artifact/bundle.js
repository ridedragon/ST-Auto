import*as e from'https://testingcf.jsdelivr.net/npm/mathjs/+esm';import{createPinia as t,defineStore as a}from'https://testingcf.jsdelivr.net/npm/pinia/+esm';import{default as n}from'https://testingcf.jsdelivr.net/npm/json5/+esm';import{default as s}from'https://testingcf.jsdelivr.net/npm/toml/+esm';import{compare as i}from'https://testingcf.jsdelivr.net/npm/compare-versions/+esm';function r(e,t){}function o(e){return Array.isArray(e)&&2===e.length&&'string'==typeof e[1]}function l(e){return'array'===e.type}function c(e){return'object'===e.type}const d={SINGLE_VARIABLE_UPDATED:'mag_variable_updated',VARIABLE_UPDATE_ENDED:'mag_variable_update_ended',VARIABLE_UPDATE_STARTED:'mag_variable_update_started',COMMAND_PARSED:'mag_command_parsed'},u='mag_invoke_mvu',m='mag_update_variable';const p=e,f='$__META_EXTENSIBLE__$';function g(e,t,a=!1){if(Array.isArray(e)){let n,s,i=!1,r=a;t&&(l(t)?(i=!0===t.extensible,r=!0===t.recursiveExtensible||a,n=t.elementType,s=t.template):console.error(`Type mismatch: expected array schema but got ${t.type} at path`));const o=e.findIndex(e=>_.isObject(e)&&!_.isDate(e)&&'$arrayMeta'in e&&'$meta'in e&&!0===e.$arrayMeta);if(-1!==o){const t=e[o];void 0!==t.$meta.extensible&&(i=t.$meta.extensible),void 0!==t.$meta.template&&(s=t.$meta.template),e.splice(o,1),console.log('Array metadata element found and processed.')}const c=e.indexOf(f);c>-1&&(i=!0,e.splice(c,1),console.log('Extensible marker found and removed from an array.'));const d={type:'array',extensible:i||a,recursiveExtensible:r,elementType:e.length>0?g(e[0],n,r):{type:'any'}};return void 0!==s&&(d.template=s),d}if(_.isObject(e)&&!_.isDate(e)){const n=e;let s,i=!1,r=a;t&&(c(t)?(i=!0===t.extensible,r=!0===t.recursiveExtensible||a,s=t.properties):console.error(`Type mismatch: expected object schema but got ${t.type} at path`));const o={type:'object',properties:{},extensible:i||!0===n.$meta?.extensible||!0===n.$meta?.recursiveExtensible||a,recursiveExtensible:r||!0===n.$meta?.recursiveExtensible};void 0!==n.$meta?.template?o.template=n.$meta.template:t&&c(t)&&t.template&&(o.template=t.template);const l=n.$meta;n.$meta&&delete n.$meta;for(const t in e){const e=s?.[t],a=!1!==o.extensible&&o.recursiveExtensible,i=g(n[t],e,a);let r=!o.extensible;Array.isArray(l?.required)&&l.required.includes(t)&&(r=!0),!1===e?.required?r=!1:!0===e?.required&&(r=!0),o.properties[t]={...i,required:r}}return o}const n=typeof e;return'string'===n||'number'===n||'boolean'===n?{type:n}:{type:'any'}}function h(e,t){if(!t||!e)return e||null;const a=_.toPath(t);let n=e;for(const e of a){if(!n)return null;if(/^\d+$/.test(e)){if(!l(n))return null;n=n.elementType}else{if(!c(n)||!n.properties[e])return null;n=n.properties[e]}}return n}function y(e){console.log('Reconciling schema with current data state...');const t=g(_.cloneDeep(e.stat_data),e.schema);if(!c(t))return void console.error('Generated schema is not an object schema, which is unexpected for stat_data root');const a=t;void 0!==e.schema?.strictTemplate&&(a.strictTemplate=e.schema.strictTemplate),void 0!==e.schema?.strictSet&&(a.strictSet=e.schema.strictSet),void 0!==e.schema?.concatTemplateArray&&(a.concatTemplateArray=e.schema.concatTemplateArray),_.has(e.stat_data,'$meta.strictTemplate')&&(a.strictTemplate=e.stat_data.$meta?.strictTemplate),_.has(e.stat_data,'$meta.strictSet')&&(a.strictSet=e.stat_data.$meta?.strictSet),_.has(e.stat_data,'$meta.concatTemplateArray')&&(a.concatTemplateArray=e.stat_data.$meta?.concatTemplateArray),e.schema=a,console.log('Schema reconciliation complete.')}function v(e){if(Array.isArray(e)){let t=e.length;for(;t--;)e[t]===f||_.isObject(e[t])&&!_.isDate(e[t])&&'$arrayMeta'in e[t]&&'$meta'in e[t]&&!0===e[t].$arrayMeta?e.splice(t,1):v(e[t])}else if(t=e,_.isObject(t)&&!_.isDate(t)){delete e.$meta;for(const t in e)v(e[t])}var t}const b=Vue,A=z,E=A.object({更新方式:A.enum(['随AI输出','额外模型解析']).default('随AI输出'),额外模型解析配置:A.object({发送预设:A.boolean().default(!0),使用函数调用:A.boolean().default(!1),模型来源:A.enum(['与插头相同','自定义']).default('与插头相同'),api地址:A.string().default('http://localhost:1234/v1'),密钥:A.string().default(''),模型名称:A.string().default('gemini-2.5-flash')}).prefault({}),通知:A.object({变量更新出错:A.boolean().default(!1),额外模型解析中:A.boolean().default(!0)}).prefault({}),internal:A.object({已提醒新配置界面:A.boolean().default(!1)}).prefault({})}).prefault({}),S=a('settings',()=>{const e=(0,b.ref)(E.parse(_.get(SillyTavern.extensionSettings,'mvu_settings',{})));return(0,b.watch)(e,e=>{_.set(SillyTavern.extensionSettings,'mvu_settings',(0,b.toRaw)(e)),SillyTavern.saveSettingsDebounced()},{deep:!0}),{settings:e}});function V(e){return _.isString(e)?e.replace(/^[\\"'` ]*(.*?)[\\"'` ]*$/,'$1'):e}function w(e,t,a=!1,n=!0){if(!t)return e;const s=_.isObject(e)&&!Array.isArray(e)&&!_.isDate(e),i=Array.isArray(e),r=Array.isArray(t);return s&&!r?_.merge({},t,e):i&&r?n?_.concat(e,t):_.merge([],t,e):(s||i)&&r!==i||!s&&!i&&_.isObject(t)&&!Array.isArray(t)?(console.error(`Template type mismatch: template is ${r?'array':'object'}, but value is ${i?'array':'object'}. Skipping template merge.`),e):s||i||!r||a?e:n?_.concat([e],t):_.merge([],t,[e])}function T(e){if('string'!=typeof e)return e;const t=e.trim();if('true'===t)return!0;if('false'===t)return!1;if('null'===t)return null;if('undefined'!==t){try{return JSON.parse(t)}catch(e){if(t.startsWith('{')&&t.endsWith('}')||t.startsWith('[')&&t.endsWith(']'))try{const e=new Function(`return ${t};`)();if(_.isObject(e)||Array.isArray(e))return e}catch(e){}}try{const e={Math,math:p},a=p.evaluate(t,e);if(p.isComplex(a)||p.isMatrix(a))return a.toString();if(void 0===a&&!/^[a-zA-Z_]+$/.test(t))return t;if(void 0!==a)return parseFloat(a.toPrecision(12))}catch(e){}try{return YAML.parse(t)}catch(e){}return V(e)}}function N(e,t){let a=1,n=!1,s='';for(let i=t;i<e.length;i++){const t=e[i],r=i>0?e[i-1]:'';if('"'!==t&&'\''!==t&&'`'!==t||'\\'===r||(n?t===s&&(n=!1):(n=!0,s=t)),!n)if('('===t)a++;else if(')'===t&&(a--,0===a))return i}return-1}function I(e){const t=[];let a='',n=!1,s='',i=0,r=0,o=0;for(let l=0;l<e.length;l++){const c=e[l];'"'!==c&&'\''!==c&&'`'!==c||0!==l&&'\\'===e[l-1]||(n?c===s&&(n=!1):(n=!0,s=c)),n||('('===c&&o++,')'===c&&o--,'['===c&&i++,']'===c&&i--,'{'===c&&r++,'}'===c&&r--),','!==c||n||0!==o||0!==i||0!==r?a+=c:(t.push(a.trim()),a='')}return a.trim()&&t.push(a.trim()),t}async function M(e){return structuredClone(_(SillyTavern.chat).slice(0,e+1).map(e=>_.get(e,['variables',e.swipe_id??0])).findLast(e=>_.has(e,'stat_data')))??getVariables()}function O(e){const t=[];let a='',n=!1,s='';for(let i=0;i<e.length;i++){const r=e[i];'"'!==r&&'\''!==r||0!==i&&'\\'===e[i-1]?'.'!==r||n?a+=r:(t.push(a),a=''):n?r===s?n=!1:a+=r:(n=!0,s=r)}return a&&t.push(a),t.join('.')}async function x(e,t,a,n='',s=!1){const i=e.$internal?.display_data,r=e.$internal?.delta_data;if(_.has(e,t)){const o=_.get(e,t);if(Array.isArray(o)&&2===o.length){const l=_.cloneDeep(o[0]);o[0]=a,_.set(e,t,o);const c=n?`(${n})`:'',u=`${V(JSON.stringify(l))}->${V(JSON.stringify(a))} ${c}`;return i&&_.set(i,t,u),r&&_.set(r,t,u),console.info(`Set '${t}' to '${V(JSON.stringify(a))}' ${c}`),s&&await eventEmit(d.SINGLE_VARIABLE_UPDATED,e,t,l,a),!0}{const l=_.cloneDeep(o);_.set(e,t,a);const c=n?`(${n})`:'',u=V(JSON.stringify(a)),m=`${V(JSON.stringify(l))}->${u} ${c}`;return i&&_.set(i,t,m),r&&_.set(r,t,m),console.info(`Set '${t}' to '${u}' ${c}`),s&&await eventEmit(d.SINGLE_VARIABLE_UPDATED,e,t,l,a),!0}}return!1}async function D(e,t){const a=_.cloneDeep(t),n={stat_data:{}},s=function(e){const t=[];let a=0;for(;a<e.length;){const n=e.substring(a).match(/_\.(set|insert|assign|remove|unset|delete|add)\(/);if(!n||void 0===n.index)break;const s=n[1],i=a+n.index,r=i+n[0].length,o=N(e,r);if(-1===o){a=r;continue}let l=o+1;if(l>=e.length||';'!==e[l]){a=o+1;continue}l++;let c='';const d=e.substring(l).match(/^\s*\/\/(.*)/);d&&(c=d[1].trim(),l+=d[0].length);const u=e.substring(i,l),m=I(e.substring(r,o));let p=!1;('set'===s&&m.length>=2||'assign'===s&&m.length>=2||'insert'===s&&m.length>=2||'remove'===s&&m.length>=1||'unset'===s&&m.length>=1||'delete'===s&&m.length>=1||'add'===s&&2===m.length)&&(p=!0),p&&t.push({type:s,full_match:u,args:m,reason:c}),a=l}return t}(substitudeMacros(e));t.stat_data.$internal={display_data:a.stat_data,delta_data:n.stat_data||{}},await eventEmit(d.VARIABLE_UPDATE_STARTED,t);let i,u,m=!1;const p=function(e){console.warn(e),i={error_last:e,error_command:u}},f=t.schema,b=f?.strictTemplate??!1,A=f?.concatTemplateArray??!0,E=f?.strictSet??!1;for(const e of s)'remove'===e.type?e.type='delete':'assign'===e.type?e.type='insert':'unset'===e.type&&(e.type='delete');await eventEmit(d.COMMAND_PARSED,t,s);for(const e of s){const s=O(V(e.args[0])),i=e.reason?`(${e.reason})`:'';let y='';switch(u=e,e.type){case'set':{if(!_.has(t.stat_data,s)){p(`Path '${s}' does not exist in stat_data, skipping set command ${i}`);continue}let a=_.get(t.stat_data,s);let n=T(e.args.length>=3?e.args[2]:e.args[1]);n instanceof Date&&(n=n.toISOString());let l=!1;if(E||!Array.isArray(a)||2!==a.length||'string'!=typeof a[1]||Array.isArray(a[0]))'number'==typeof a&&null!==n?_.set(t.stat_data,s,Number(n)):_.set(t.stat_data,s,n);else{const e=_.cloneDeep(a[0]);a[0]='number'==typeof a[0]&&null!==n?Number(n):n,a=e,l=!0}let c=_.get(t.stat_data,s);r(),l&&(c=c[0]);y=!E&&o(a)&&Array.isArray(c)?`${V(JSON.stringify(a[0]))}->${V(JSON.stringify(c[0]))} ${i}`:`${V(JSON.stringify(a))}->${V(JSON.stringify(c))} ${i}`,m=!0,console.info(`Set '${s}' to '${JSON.stringify(c)}' ${i}`),await eventEmit(d.SINGLE_VARIABLE_UPDATED,t.stat_data,s,a,c);break}case'insert':case'assign':{const a=s,n=''===a?t.stat_data:_.get(t.stat_data,a),r=h(f,a);if(null!==n&&!Array.isArray(n)&&!_.isObject(n)){p(`Cannot assign into path '${a}' because it holds a primitive value (${typeof n}). Operation skipped. ${i}`);continue}if(r){if('object'===r.type&&!1===r.extensible){if(2===e.args.length){p(`SCHEMA VIOLATION: Cannot merge data into non-extensible object at path '${a}'. ${i}`);continue}if(e.args.length>=3){const t=String(T(e.args[1]));if(!_.has(r.properties,t)){p(`SCHEMA VIOLATION: Cannot assign new key '${t}' into non-extensible object at path '${a}'. ${i}`);continue}}}else if('array'===r.type&&(!1===r.extensible||void 0===r.extensible)){p(`SCHEMA VIOLATION: Cannot assign elements into non-extensible array at path '${a}'. ${i}`);continue}}else if(''!==a&&!_.get(t.stat_data,_.toPath(a).slice(0,-1).join('.'))){p(`Cannot assign into non-existent path '${a}' without an extensible parent. ${i}`);continue}const o=_.cloneDeep(_.get(t.stat_data,s));let u=!1;if(2===e.args.length){let n=T(e.args[1]);n instanceof Date?n=n.toISOString():Array.isArray(n)&&(n=n.map(e=>e instanceof Date?e.toISOString():e));let o=''===a?t.stat_data:_.get(t.stat_data,s);if(Array.isArray(o)||_.isObject(o)||(o=Array.isArray(n)?[]:{},_.set(t.stat_data,s,o)),Array.isArray(o)){n=w(n,r&&l(r)?r.template:void 0,b,A),o.push(n),y=`ASSIGNED ${JSON.stringify(n)} into array '${s}' ${i}`,u=!0}else if(_.isObject(o)){if(!_.isObject(n)||Array.isArray(n)){p(`Cannot merge ${Array.isArray(n)?'array':'non-object'} into object at '${s}'`);continue}_.merge(o,n),y=`MERGED object ${JSON.stringify(n)} into object '${s}' ${i}`,u=!0}}else if(e.args.length>=3){let n=T(e.args[2]);const o=T(e.args[1]);n instanceof Date?n=n.toISOString():Array.isArray(n)&&(n=n.map(e=>e instanceof Date?e.toISOString():e));let d=''===a?t.stat_data:_.get(t.stat_data,s);const m=r&&(l(r)||c(r))?r.template:void 0;Array.isArray(d)&&'number'==typeof o?(n=w(n,m,b,A),d.splice(o,0,n),y=`ASSIGNED ${JSON.stringify(n)} into '${s}' at index ${o} ${i}`,u=!0):_.isObject(d)?(n=w(n,m,b,A),d[String(o)]=n,y=`ASSIGNED key '${o}' with value ${JSON.stringify(n)} into object '${s}' ${i}`,u=!0):(d={},_.set(t.stat_data,s,d),n=w(n,m,b,A),d[String(o)]=n,y=`CREATED object at '${s}' and ASSIGNED key '${o}' ${i}`,u=!0)}if(!u){p(`Invalid arguments for _.assign on path '${s}'`);continue}{const e=_.get(t.stat_data,s);m=!0,console.info(y),await eventEmit(d.SINGLE_VARIABLE_UPDATED,t.stat_data,s,o,e);try{const t=g(structuredClone(e),r);_.merge(r,t),v(e)}catch(e){e instanceof Error?p(`Failed to resolve template meta at '${s}', '${e.message}'`):p(`Failed to resolve template meta at '${s}', '${e}'`)}}break}case'unset':case'delete':case'remove':{if(!_.has(t.stat_data,s)){p(`undefined Path: ${s} in _.remove command`);continue}let a,n=s;if(e.args.length>1)a=T(e.args[1]),'string'==typeof a&&(a=V(a));else{const e=_.toPath(s),t=e.pop();t&&(a=/^\d+$/.test(t)?Number(t):t,n=e.join('.'))}if(void 0===a){p(`Could not determine target for deletion for command on path '${s}' ${i}`);continue}if(''!==n&&!_.has(t.stat_data,n)){p(`Cannot remove from non-existent path '${n}'. ${i}`);continue}const r=h(f,n);if(r)if('array'===r.type){if(!0!==r.extensible){p(`SCHEMA VIOLATION: Cannot remove element from non-extensible array at path '${n}'. ${i}`);continue}}else if('object'===r.type){const e=String(a);if(_.has(r.properties,e)&&!0===r.properties[e].required){p(`SCHEMA VIOLATION: Cannot remove required key '${e}' from path '${n}'. ${i}`);continue}}const o=e.args.length>1?T(e.args[1]):void 0;let l=!1;if(void 0===o){const e=_.get(t.stat_data,s);_.unset(t.stat_data,s),y=`REMOVED path '${s}' ${i}`,l=!0,await eventEmit(d.SINGLE_VARIABLE_UPDATED,t.stat_data,s,e,void 0)}else{const e=_.get(t.stat_data,s);if(!Array.isArray(e)&&!_.isObject(e)){p(`Cannot remove from path '${s}' because it is not an array or object. Skipping command. ${i}`);continue}if(Array.isArray(e)){const a=_.cloneDeep(e);let n=-1;n='number'==typeof o?o:e.findIndex(e=>_.isEqual(e,o)),n>=0&&n<e.length&&(e.splice(n,1),l=!0,y=`REMOVED item from '${s}' ${i}`,await eventEmit(d.SINGLE_VARIABLE_UPDATED,t.stat_data,s,a,e))}else if(_.isObject(e))if('number'==typeof o){const t=Object.keys(e),a=o;if(a>=0&&a<t.length){const n=t[a];_.unset(e,n),l=!0,y=`REMOVED ${a+1}th entry ('${n}') from object '${s}' ${i}`}}else{const t=String(o);_.has(e,t)&&(delete e[t],l=!0,y=`REMOVED key '${t}' from object '${s}' ${i}`)}}if(!l){p(`Failed to execute remove on '${s}'`);continue}m=!0,console.info(y);break}case'add':{if(!_.has(t.stat_data,s)){p(`Path '${s}' does not exist in stat_data, skipping add command ${i}`);continue}const a=_.cloneDeep(_.get(t.stat_data,s)),n=_.get(t.stat_data,s);let l=n;const c=o(n)&&'object'!=typeof n[0];c&&(r(),l=n[0]);let u=null;if(l instanceof Date)u=l;else if('string'==typeof l){const e=new Date(l);!isNaN(e.getTime())&&isNaN(Number(l))&&(u=e)}if(2!==e.args.length){p(`Invalid number of arguments for _.add on path '${s}' ${i}`);continue}{const o=T(e.args[1]);if(u){if('number'!=typeof o){p(`Delta '${e.args[1]}' for Date operation is not a number, skipping add command ${i}`);continue}const l=new Date(u.getTime()+o),f=l.toISOString();c?(r(),n[0]=f,_.set(t.stat_data,s,n)):_.set(t.stat_data,s,f);const g=_.get(t.stat_data,s);y=c?`${JSON.stringify(a[0])}->${JSON.stringify(g[0])} ${i}`:`${JSON.stringify(a)}->${JSON.stringify(g)} ${i}`,m=!0,console.info(`ADDED date '${s}' from '${u.toISOString()}' to '${l.toISOString()}' by delta '${o}'ms ${i}`),await eventEmit(d.SINGLE_VARIABLE_UPDATED,t.stat_data,s,a,g)}else{if('number'!=typeof l){p(`Path '${s}' value is not a date or number; skipping add command ${i}`);continue}{if('number'!=typeof o){p(`Delta '${e.args[1]}' is not a number, skipping add command ${i}`);continue}let r=l+o;r=parseFloat(r.toPrecision(12)),c?(n[0]=r,_.set(t.stat_data,s,n)):_.set(t.stat_data,s,r);const u=_.get(t.stat_data,s);y=c?`${JSON.stringify(a[0])}->${JSON.stringify(u[0])} ${i}`:`${JSON.stringify(a)}->${JSON.stringify(u)} ${i}`,m=!0,console.info(`ADDED number '${s}' from '${l}' to '${r}' by delta '${o}' ${i}`),await eventEmit(d.SINGLE_VARIABLE_UPDATED,t.stat_data,s,a,u)}}}break}}y&&(_.set(a.stat_data,s,y),_.set(n.stat_data,s,y))}if(t.display_data=a.stat_data,t.delta_data=n.stat_data,await eventEmit(d.VARIABLE_UPDATE_ENDED,t),delete t.stat_data.$internal,m&&y(t),i&&S().settings.通知.变量更新出错){const e=i.error_command.full_match;'undefined'!=typeof toastr&&toastr.warning(`最近错误: ${i.error_last}`,`[MVU]发生变量更新错误，可能需要重Roll: ${e}`,{timeOut:6e3})}return m||!1}async function k(e){const t=getChatMessages(e).at(-1);if(!t)return;let a=t.message;if(a.length<5)return;const n=0===e?0:e-1,s=await M(n);if(!_.has(s,'stat_data'))return void console.error(`cannot found stat_data for ${n}`);const i=e=>(e.stat_data=s.stat_data,e.display_data=s.display_data,e.delta_data=s.delta_data,e.initialized_lorebooks=s.initialized_lorebooks,void 0!==s.schema?e.schema=s.schema:delete e.schema,e);await D(a,s)&&await updateVariablesWith(i,{type:'chat'}),await updateVariablesWith(i,{type:'message',message_id:e}),'user'!==t.role&&(a.includes('<StatusPlaceHolderImpl/>')||(a+='\n\n<StatusPlaceHolderImpl/>'),await setChatMessages([{message_id:e,message:a}],{refresh:'affected'}))}async function C(e,t){if(void 0===t.old_variables)return;t.new_variables=_.cloneDeep(t.old_variables);const a=t.new_variables;await D(e,a)||delete t.new_variables}function j(e,t,a,n){_.forEach(t,(e,t)=>{const s=t;if(_.isArray(e)){if(2===e.length&&_.isString(e[1])){if(_.isArray(_.get(a,s))){const i=_.get(a,s);if(2===i.length)if(_.set(n,`${s}[1]`,e[1]),_.isObject(e[0])&&!_.isArray(e[0])){const a=_.get(n,`${t}[0]`);_.has(e[0],'description')&&_.isString(e[0].description)&&_.has(i[0],'description')&&_.set(n,`${s}[0].description`,e[0].description),j(`${s}[0]`,e[0],i[0],a)}else _.isArray(e[0])&&j(`${s}[0]`,e[0],i[0],n[0])}}else if(_.isArray(_.get(a,s))){const t=_.get(a,s);e.forEach((a,i)=>{if(i<t.length&&_.isObject(a)){const r=_.get(n,`${s}[${i}]`);_.has(a,'description')&&_.isString(a.description)&&_.has(t[i],'description')&&_.set(r,'description',a.description),j(`${s}[${i}]`,e[i],t[i],r)}})}}else if(_.isObject(e)){if(_.has(e,'description')&&_.isString(e.description)){const s=`${t}.description`;_.has(a,s)&&_.set(n,s,e.description)}_.has(a,t)&&_.isObject(a[t])&&j(s,e,a[t],n[t])}})}async function U(){let e;try{if(0===SillyTavern.chat.length)return console.error('不存在任何一条消息，退出'),void toastr.error('需要有开场白才能初始化变量','[MVU]变量初始化失败');e=await M(getLastMessageId())??{display_data:{},initialized_lorebooks:{},stat_data:{},delta_data:{},schema:{type:'object',properties:{}}}}catch(e){return void console.error('不存在任何一条消息，退出')}if(void 0===e&&(e={display_data:{},initialized_lorebooks:{},stat_data:{},delta_data:{},schema:{type:'object',properties:{}}}),_.has(e,'initialized_lorebooks')||(e.initialized_lorebooks={}),Array.isArray(e.initialized_lorebooks)){console.warn('Old "initialized_lorebooks" array format detected. Migrating to the new object format.');const t=e.initialized_lorebooks,a={};for(const e of t)a[e]=[];e.initialized_lorebooks=a}e.stat_data||(e.stat_data={}),e.schema||(e.schema={extensible:!1,properties:{},type:'object'});const t=await L(e);if(t){}if(t||!e.schema||_.isEmpty(e.schema)){const t=g(structuredClone(e.stat_data),e.schema);c(t)?(_.has(e.stat_data,'$meta.strictTemplate')&&(t.strictTemplate=e.stat_data.$meta?.strictTemplate),_.has(e.stat_data,'$meta.concatTemplateArray')&&(t.concatTemplateArray=e.stat_data.$meta?.concatTemplateArray),_.has(e.stat_data,'$meta.strictSet')&&(t.strictSet=e.stat_data.$meta?.strictSet),e.schema=t):console.error('Generated schema is not an object schema, which is unexpected for stat_data root'),v(e.stat_data)}if(t){if(console.info('Init chat variables.'),await updateVariablesWith(t=>_.assign(t,e)),0==getLastMessageId()){const t=getChatMessages(0,{include_swipes:!0})[0];await setChatMessages([{message_id:0,swipes_data:await Promise.all(t.swipes.map(async t=>{const a=structuredClone(e);return await D(t,a),console.log('变量初始化完成'),a}))}])}else await setChatMessage({data:e},getLastMessageId());try{toastr.info(`有新的世界书初始化变量被加载，当前使用世界书:<br>${Object.entries(e.initialized_lorebooks??{}).map(([e,t])=>`- ${e}: ${JSON.stringify(t)}`).join('<br>')}}`,'[MVU]变量初始化成功',{escapeHtml:!1})}catch(e){}await async function(){const e={scan_depth:2,context_percentage:100,budget_cap:0,min_activations:0,max_depth:0,max_recursion_steps:0,insertion_strategy:'character_first',include_names:!1,recursive:!0,case_sensitive:!1,match_whole_words:!1,use_group_scoring:!1,overflow_alert:!1},t=getLorebookSettings();_.isEqual(_.merge({},t,e),t)||setLorebookSettings(e)}()}}async function L(e,t){const a=t||await async function(){const e=[...(await getLorebookSettings()).selected_global_lorebooks],t=await getCurrentCharPrimaryLorebook();return null!==t&&e.push(t),e}();let i=!1;e.initialized_lorebooks&&!Array.isArray(e.initialized_lorebooks)||(e.initialized_lorebooks={});for(const t of a){if(_.has(e.initialized_lorebooks,t))continue;e.initialized_lorebooks[t]=[];const a=await getLorebookEntries(t);for(const t of a)if(t.comment?.toLowerCase().includes('[initvar]')){const a=substitudeMacros(t.content);let i=null,r=null;try{i=YAML.parseDocument(a,{merge:!0}).toJS()}catch(e){try{i=n.parse(a)}catch(e){try{i=s.parse(a)}catch(e){r=new Error(`initvar 不是有效的 YAML/JSON/JSON5/TOML 格式: ${e}`)}}}if(r)throw console.error(`解析世界书条目'${t.comment}'失败: ${r}`),toastr.error(r.message,`[MVU] 解析世界书条目'${t.comment}'失败`,{timeOut:5e3}),r;i&&(e.stat_data=_.merge(e.stat_data,i))}i=!0}return i}const P=[{name:'重新处理变量',function:async()=>{const e=getLastMessageId();e<1||0!==SillyTavern.chat.length&&(await updateVariablesWith(e=>(_.unset(e,'stat_data'),_.unset(e,'delta_data'),_.unset(e,'display_data'),_.unset(e,'schema'),e),{type:'message',message_id:e}),await k(getLastMessageId()))}},{name:'重新读取初始变量',function:async()=>{const e={display_data:{},initialized_lorebooks:{},stat_data:{},delta_data:{},schema:{type:'object',properties:{}}};try{if(!await L(e))return console.error('没有找到 InitVar 数据'),void toastr.error('没有找到 InitVar 数据','[MVU]',{timeOut:3e3})}catch(e){return void console.error('加载 InitVar 数据失败:',e)}await y(e),v(e.stat_data);const t=getLastMessageId();if(t<0)return console.error('没有找到消息'),void toastr.error('没有找到消息','[MVU]',{timeOut:3e3});const a=await M(t);if(!_.has(a,'stat_data'))return console.error('最新消息中没有找到 stat_data'),void toastr.error('最新消息中没有 stat_data','[MVU]',{timeOut:3e3});const n={stat_data:void 0,schema:void 0};n.stat_data=_.merge({},e.stat_data,a.stat_data),n.schema=_.merge({},a.schema,e.schema),n.initialized_lorebooks=_.merge({},e.initialized_lorebooks,a.initialized_lorebooks),n.display_data=structuredClone(n.stat_data),n.delta_data=a.delta_data,j(0,e.stat_data,a.stat_data,n.stat_data),await y(n),v(n.stat_data),await replaceVariables(n,{type:'message',message_id:t}),await setChatMessage({},t),await replaceVariables(n,{type:'chat'}),console.info('InitVar更新完成'),toastr.success('InitVar描述已更新','[MVU]',{timeOut:3e3})}},{name:'清除旧楼层变量',function:async()=>{const e=await SillyTavern.callGenericPopup('<h4>清除旧楼层变量信息以减小聊天文件大小避免手机崩溃</h4>请填写要保留变量信息的楼层数 (如 10 为保留最后 10 层)<br><strong>注意: 你将不能正常回退游玩到没保留变量信息的楼层</strong>',SillyTavern.POPUP_TYPE.INPUT,'10');if(!e)return;const t=parseInt(e);isNaN(t)?toastr.error(`请输入有效的楼层数, 你输入的是 '${e}'`,'[MVU]清理旧楼层变量失败'):(SillyTavern.chat.slice(0,-t).forEach(e=>{void 0!==e.variables&&(e.variables=_.range(0,e.swipes?.length??1).map(t=>void 0===e?.variables?.[t]?{}:_.omit(e.variables[t],'stat_data','display_data','delta_data','schema')))}),SillyTavern.saveChat().then(()=>toastr.success(`已清理旧变量, 保留了最后 ${t} 层的变量`,'[MVU]清理旧楼层变量成功')))}}];function R(){return{events:d,parseMessage:async function(e,t){const a={old_variables:t};return await C(e,a),a.new_variables},getMvuData:function(e){return getVariables(e)},replaceMvuData:async function(e,t){await replaceVariables(e,t)},getCurrentMvuData:function(){return getVariables({type:'message',message_id:getCurrentMessageId()})},replaceCurrentMvuData:async function(e){await replaceVariables(e,{type:'message',message_id:getCurrentMessageId()})},reloadInitVar:async function(e){return await L(e)},setMvuVariable:async function(e,t,a,{reason:n='',is_recursive:s=!1}={}){return await x(e.stat_data,t,a,n,s)},getMvuVariable:function(e,t,{category:a='stat',default_value:n}={}){let s;switch(a){case'stat':s=e.stat_data;break;case'display':s=e.display_data;break;case'delta':s=e.delta_data}const i=_.get(s,t,n);return function(e){return Array.isArray(e)&&2===e.length&&'string'==typeof e[1]}(i)?i[0]:i},getRecordFromMvuData:function(e,t){return function(e,t){let a;switch(e){case'stat':a=t.stat_data;break;case'display':a=t.display_data;break;case'delta':a=t.delta_data}return a}(t,e)}}}const J='mvu_VariableUpdate';let B=!1;function G(e){B=e}async function F(e){if(!e?.delta)return'';let t=getLastMessageId(),a=getChatMessages(t).at(-1);if(a&&'system'===a.role&&(t-=1,a=getChatMessages(t).at(-1)),!a)return'';let n=a.message;const s=await M(t);if(!_.has(s,'stat_data'))return console.error(`cannot found stat_data for ${t}`),'';return await D(e.delta,s)&&await replaceVariables(s,{type:'chat'}),await replaceVariables(s,{type:'message',message_id:t}),n+=`<UpdateVariable>\n<Analysis>${e.analysis}</Analysis></Analysis>${e.delta}\n</UpdateVariable>`,'user'===a.role||n.includes('<StatusPlaceHolderImpl/>')?await setChatMessages([{message_id:t,message:n}],{refresh:'affected'}):await setChatMessages([{message_id:t,message:n+'\n\n<StatusPlaceHolderImpl/>'}],{refresh:'affected'}),JSON.stringify(s.delta_data)}function q(e){const t=S().settings;'额外模型解析'===t.更新方式&&!0===t.额外模型解析配置.使用函数调用&&B&&void 0!==e.tools&&_.size(e.tools)>0&&(e.tool_choice='required')}let H='1.0.0';function W(){return H}function Y(){return!!SillyTavern.ToolManager.isToolCallingSupported()&&!1!==SillyTavern.chatCompletionSettings.function_calling}const X='undefined'!=typeof jest||'undefined'!=typeof process&&!1,Z={class:'inline-drawer'},K={class:'inline-drawer-content'},Q={class:'flex-container flexFlowColumn'},ee={class:'checkbox_label',for:'mvu_notification_error'},te={class:'checkbox_label',for:'mvu_notification_extra_model_parsing'},ae={class:'flex-container flexFlowColumn'},ne={class:'checkbox_label',for:'mvu_extra_model_send_preset'},se={class:'checkbox_label',for:'mvu_extra_model_use_function_calling'},ie={class:'flex-container flexFlowColumn'},re={class:'flex-container flexFlowColumn'},oe={class:'flex-container flexFlowColumn'},le={class:'flex-container flexFlowColumn'},ce={class:'flex-container flex'},de=['onClick'],ue=(0,b.defineComponent)({__name:'Panel',setup(e){const t=S();async function a(){SillyTavern.callGenericPopup('<h1>使用说明</h1> <h2>选择你的变量更新方式</h2> <p>为了让剧情模型更专注于剧情，你可以选择变量更新的方式：</p> <ul> <li><strong>随AI输出</strong>：条目将会正常发给 AI，因此 AI 将会在回复时输出变量更新分析及更新命令，进而更新变量。</li> <li><strong>额外模型解析</strong>：先由一个 AI 专门输出剧情，再由一个 AI 专门解析剧情来更新变量，这个过程中： <ul> <li>名字中有 <code>[mvu_plot]</code> 的条目只会发给输出剧情 AI</li> <li>名字中有 <code>[mvu_update]</code> 的条目只会发给更新变量 AI</li> <li>名字中既没有 <code>[mvu_plot]</code> 也没有 <code>[mvu_update]</code> 将会发送给两个 AI</li> </ul> </li> </ul> <p>除“随AI输出”以外的方式，只有在作者适配世界书后才能使用——但没适配也没关系——如果作者没有适配，则 MVU 依旧会使用“随AI输出”的方式更新变量。</p> <h2>适配世界书</h2> <p>你只需要拆分一下条目、给条目改一下名字就能让世界书适配其他变量更新方式。</p> <p>具体地，MVU 变量框架的提示词分为：</p> <ul> <li><strong>变量列表</strong>：让 AI 知道有什么变量，如 <code>{{get_message_variable::stat_data}}</code>、<code>&#x3C;%= getvar(\'stat_data\') _%></code> 等。</li> <li><strong>变量更新规则</strong>：让 AI 知道变量该如何更新，如<code>药物依赖度应该每分钟增加1点</code>等。</li> <li><strong>输出规则</strong>：让 AI 知道该输出什么来表达变量发生变化，如提示词中要求输出的 <code>&#x3C;UpdateVariable></code> 块。</li> </ul> <p>你需要做的，是给“变量更新规则”和“输出规则”条目的名字添加 <code>[mvu_update]</code>，也就是改成：</p> <ul> <li><code>变量列表</code></li> <li><code>[mvu_update]变量更新规则</code></li> <li><code>[mvu_update]输出规则</code></li> </ul> <p>此外，如果你有其他输出格式，为了不对变量更新 AI 产生干扰，你可以用 <code>[mvu_plot]</code> 指定它只发给负责输出剧情的 AI：</p> <ul> <li><code>[mvu_plot]剧情思维链</code></li> </ul> <p>这样修改名字只是区分什么情况下发送条目, 绿灯等功能依旧会生效.</p> ',SillyTavern.POPUP_TYPE.TEXT,'',{allowVerticalScrolling:!0,leftAlign:!0,wide:!0})}async function n(){SillyTavern.callGenericPopup('<h1>额外模型解析方式</h1> <ul> <li> <p>发送预设：是否要把预设里的条目也发给额外模型</p> <ul> <li>开启：额外模型将会被预设破限; 但是预设往往规定了写作任务，因此额外模型可能会选择继续剧情而不是更新变量。</li> <li>关闭：额外模型可能因为没有被破限而道歉。</li> </ul> </li> <li> <p>使用函数调用：一些渠道的模型支持函数调用</p> <ul> <li>开启：额外模型将使用函数调用来更新变量，不受预设的写作任务影响; 但很多渠道不支持函数调用。</li> <li>关闭：额外模型会通过输出文本来更新变量，可能受预设的写作任务影响而选择继续剧情而不是更新变量。</li> </ul> </li> </ul> <h2>什么时候需要调整解析方式</h2> <p>默认情况下，更新变量的 AI 请求也会包含预设的内容，不过 AI 因此有一定概率受预设的写作任务而继续剧情，导致其实是在推进剧情的同时分析了变量——变量的更新结果实际上是属于未来剧情的，与当前回复并不吻合。</p> <p>如果发现了这种不吻合，在 SFW 的场合可以关闭<code>发送预设</code>，避免预设对变量分析请求的影响; 在 NSFW 的场合，则可以尝试开启<code>使用函数调用</code>来稳定覆盖掉预设中的任务。</p> <p>但<code>函数调用</code>存在限制:</p> <ul> <li>MVU 的<code>函数调用</code>要求支持的函数调用类型为 <code>required</code></li> <li>目前只有一部分模型/提供商/反代支持函数调用</li> <li>已知支持的模型至少包括 Claude 4+、Gemini 2.5 Pro、Deepseek V3/V3.1 (官方渠道，硅基流动等的不支持); 如果你使用的是上述模型，但是请求报错，建议换个渠道使用这些模型</li> </ul> ',SillyTavern.POPUP_TYPE.TEXT,'',{allowVerticalScrolling:!0,leftAlign:!0,wide:!0})}return(0,b.watch)(()=>t.settings.更新方式,e=>{'额外模型解析'===e&&i(W(),'1.13.4','<')&&(toastr.error('检查到酒馆版本过低，要使用\'额外模型解析\'请保证酒馆版本大于等于 1.13.4','[MVU]无法使用\'额外模型解析\'',{timeOut:5e3}),t.settings.更新方式='随AI输出')}),(0,b.watch)(()=>t.settings.额外模型解析配置.使用函数调用,e=>{!0===e&&(SillyTavern.ToolManager.isToolCallingSupported()||toastr.error('请在 API 配置 (插头) 处将提示词后处理改为\'含工具\'的选项','[MVU]无法使用\'函数调用\'',{timeOut:5e3}),!1===SillyTavern.chatCompletionSettings.function_calling&&toastr.error('请在预设面板勾选\'启用函数调用\'选项','[MVU]无法使用\'函数调用\'',{timeOut:5e3}),t.settings.额外模型解析配置.使用函数调用=!0)}),(e,s)=>((0,b.openBlock)(),(0,b.createElementBlock)('div',Z,[s[25]||(s[25]=(0,b.createElementVNode)('div',{class:'inline-drawer-toggle inline-drawer-header'},[(0,b.createElementVNode)('b',null,'MVU 变量框架'),(0,b.createElementVNode)('div',{class:'inline-drawer-icon fa-solid fa-circle-chevron-down down'})],-1)),(0,b.createElementVNode)('div',K,[(0,b.createElementVNode)('div',Q,[s[11]||(s[11]=(0,b.createElementVNode)('div',null,[(0,b.createElementVNode)('strong',null,'通知设置')],-1)),(0,b.createElementVNode)('label',ee,[(0,b.withDirectives)((0,b.createElementVNode)('input',{id:'mvu_notification_error','onUpdate:modelValue':s[0]||(s[0]=e=>(0,b.unref)(t).settings.通知.变量更新出错=e),type:'checkbox'},null,512),[[b.vModelCheckbox,(0,b.unref)(t).settings.通知.变量更新出错]]),s[9]||(s[9]=(0,b.createElementVNode)('span',null,'变量更新出错时通知',-1))]),(0,b.createElementVNode)('label',te,[(0,b.withDirectives)((0,b.createElementVNode)('input',{id:'mvu_notification_extra_model_parsing','onUpdate:modelValue':s[1]||(s[1]=e=>(0,b.unref)(t).settings.通知.额外模型解析中=e),type:'checkbox'},null,512),[[b.vModelCheckbox,(0,b.unref)(t).settings.通知.额外模型解析中]]),s[10]||(s[10]=(0,b.createElementVNode)('span',null,'额外模型解析中通知',-1))])]),s[23]||(s[23]=(0,b.createElementVNode)('hr',null,null,-1)),(0,b.createElementVNode)('div',ae,[(0,b.createElementVNode)('div',null,[s[12]||(s[12]=(0,b.createElementVNode)('strong',null,'变量更新方式',-1)),(0,b.createElementVNode)('i',{class:'fa-solid fa-circle-question fa-sm note-link-span',style:{cursor:'pointer'},onClick:a})]),(0,b.withDirectives)((0,b.createElementVNode)('select',{id:'mvu_update_method','onUpdate:modelValue':s[2]||(s[2]=e=>(0,b.unref)(t).settings.更新方式=e),class:'text_pole'},[...s[13]||(s[13]=[(0,b.createElementVNode)('option',{value:'随AI输出'},'随AI输出',-1),(0,b.createElementVNode)('option',{value:'额外模型解析'},'额外模型解析',-1)])],512),[[b.vModelSelect,(0,b.unref)(t).settings.更新方式]]),'额外模型解析'===(0,b.unref)(t).settings.更新方式?((0,b.openBlock)(),(0,b.createElementBlock)(b.Fragment,{key:0},[(0,b.createElementVNode)('label',null,[s[14]||(s[14]=(0,b.createTextVNode)(' 解析方式 ',-1)),(0,b.createElementVNode)('i',{class:'fa-solid fa-circle-question fa-sm note-link-span',style:{cursor:'pointer'},onClick:n})]),(0,b.createElementVNode)('label',ne,[(0,b.withDirectives)((0,b.createElementVNode)('input',{id:'mvu_extra_model_send_preset','onUpdate:modelValue':s[3]||(s[3]=e=>(0,b.unref)(t).settings.额外模型解析配置.发送预设=e),type:'checkbox'},null,512),[[b.vModelCheckbox,(0,b.unref)(t).settings.额外模型解析配置.发送预设]]),s[15]||(s[15]=(0,b.createElementVNode)('span',null,'发送预设',-1))]),(0,b.createElementVNode)('label',se,[(0,b.withDirectives)((0,b.createElementVNode)('input',{id:'mvu_extra_model_use_function_calling','onUpdate:modelValue':s[4]||(s[4]=e=>(0,b.unref)(t).settings.额外模型解析配置.使用函数调用=e),type:'checkbox'},null,512),[[b.vModelCheckbox,(0,b.unref)(t).settings.额外模型解析配置.使用函数调用]]),s[16]||(s[16]=(0,b.createElementVNode)('span',null,'使用函数调用',-1))]),s[21]||(s[21]=(0,b.createElementVNode)('label',{for:'mvu_extra_model_source'},'模型来源',-1)),(0,b.withDirectives)((0,b.createElementVNode)('select',{id:'mvu_extra_model_source','onUpdate:modelValue':s[5]||(s[5]=e=>(0,b.unref)(t).settings.额外模型解析配置.模型来源=e),class:'text_pole'},[...s[17]||(s[17]=[(0,b.createElementVNode)('option',{value:'与插头相同'},'与插头相同',-1),(0,b.createElementVNode)('option',{value:'自定义'},'自定义',-1)])],512),[[b.vModelSelect,(0,b.unref)(t).settings.额外模型解析配置.模型来源]]),'自定义'===(0,b.unref)(t).settings.额外模型解析配置.模型来源?((0,b.openBlock)(),(0,b.createElementBlock)(b.Fragment,{key:0},[(0,b.createElementVNode)('div',ie,[s[18]||(s[18]=(0,b.createElementVNode)('label',{for:'mvu_api_url'},'API 地址',-1)),(0,b.withDirectives)((0,b.createElementVNode)('input',{id:'mvu_api_url','onUpdate:modelValue':s[6]||(s[6]=e=>(0,b.unref)(t).settings.额外模型解析配置.api地址=e),type:'text',class:'text_pole',placeholder:'http://localhost:1234/v1'},null,512),[[b.vModelText,(0,b.unref)(t).settings.额外模型解析配置.api地址]])]),(0,b.createElementVNode)('div',re,[s[19]||(s[19]=(0,b.createElementVNode)('label',{for:'mvu_api_key'},'API 密钥',-1)),(0,b.withDirectives)((0,b.createElementVNode)('input',{id:'mvu_api_key','onUpdate:modelValue':s[7]||(s[7]=e=>(0,b.unref)(t).settings.额外模型解析配置.密钥=e),type:'password',class:'text_pole',placeholder:'留空表示无需密钥'},null,512),[[b.vModelText,(0,b.unref)(t).settings.额外模型解析配置.密钥]])]),(0,b.createElementVNode)('div',oe,[s[20]||(s[20]=(0,b.createElementVNode)('label',{for:'mvu_model_name'},'模型名称',-1)),(0,b.withDirectives)((0,b.createElementVNode)('input',{id:'mvu_model_name','onUpdate:modelValue':s[8]||(s[8]=e=>(0,b.unref)(t).settings.额外模型解析配置.模型名称=e),type:'text',class:'text_pole',placeholder:'gemini-2.5-flash'},null,512),[[b.vModelText,(0,b.unref)(t).settings.额外模型解析配置.模型名称]])])],64)):(0,b.createCommentVNode)('v-if',!0)],64)):(0,b.createCommentVNode)('v-if',!0)]),s[24]||(s[24]=(0,b.createElementVNode)('hr',null,null,-1)),(0,b.createElementVNode)('div',le,[s[22]||(s[22]=(0,b.createElementVNode)('div',null,[(0,b.createElementVNode)('strong',null,'修复按钮')],-1)),(0,b.createElementVNode)('div',ce,[((0,b.openBlock)(!0),(0,b.createElementBlock)(b.Fragment,null,(0,b.renderList)((0,b.unref)(P),e=>((0,b.openBlock)(),(0,b.createElementBlock)('div',{key:e.name,class:'menu_button menu_button_icon interactable',tabindex:'0',role:'button',onClick:e.function},(0,b.toDisplayString)(e.name),9,de))),128))])])])]))}}),_e=(0,b.createApp)(ue);function me(){!function(){if($(`head > div[script_id="${getScriptId()}"]`).length>0)return;const e=$('<div>').attr('script_id',getScriptId()).append($('head > style',document).clone());$('head').append(e)}();const e=$('<div>').attr('script_id',getScriptId());$('#extensions_settings2').append(e),_e.use(t()).mount(e[0])}function pe(){_e.unmount(),$(`#extensions_settings2 > div[script_id="${getScriptId()}"]`).remove(),$(`head > div[script_id="${getScriptId()}"]`).remove()}let fe=!1,ge=!1;async function he(e){const t=S().settings;if(ge=!1,'随AI输出'===t.更新方式)return;if(t.额外模型解析配置.使用函数调用&&!Y())return void toastr.warning('当前预设/API 不支持函数调用，已退化回 `随AI输出`','[MVU]无法使用函数调用',{timeOut:2e3});const a=/\[mvu_update\]/i,n=/\[mvu_plot\]/i,s=e=>{_.remove(e,e=>{const t=e.comment.match(a),s=e.comment.match(n);return fe?s&&!t:!s&&t}).length>0&&(ge=!0)};s(e.globalLore),s(e.characterLore),s(e.chatLore),s(e.personaLore)}let ye=null;async function ve(e){const t=getChatMessages(e).at(-1);if(!t)return;if(t.message.length<5)return;const a=S().settings;if(fe=!1,'随AI输出'===a.更新方式||a.额外模型解析配置.使用函数调用&&!Y()||!1===ge)return void await k(e);fe=!0;let n='---\n<must>\nThe latest storyline is contained within the `<past_observe>` block.\nThe `<status_description>` section records the state of variables *prior to* the latest storyline.\n# Ignore all the instructions I received before, my task has now changed.\nI must now **stop role-playing** and analyze the latest storyline **from a narrator’s perspective**, reviewing what has happened and updating the variables in `<status_description>` according to the variable update rules.\nFrom this point onward, **only** output the `<VariableUpdate>` content.\n</must>';a.额外模型解析配置.使用函数调用&&(n+='\n use `mvu_VariableUpdate` tool to update variables.');const s=!1===a.额外模型解析配置.发送预设?generateRaw:generate;let r='',o=0;try{G(!0),console.log('Before RegisterMacro'),i(W(),'1.13.4','<=')&&await new Promise(e=>setTimeout(e,1e3)),SillyTavern.registerMacro('lastUserMessage',()=>n),console.log('After RegisterMacro');const e=[{id:'817114514',position:'in_chat',depth:0,should_scan:!1,role:'system',content:n},{id:'817114515',position:'in_chat',depth:2,should_scan:!1,role:'assistant',content:'<past_observe>'},{id:'817114516',position:'in_chat',depth:1,should_scan:!1,role:'assistant',content:'</past_observe>'}];let t;if(a.额外模型解析配置.使用函数调用){ye=SillyTavern.ToolManager.parseToolCalls;const e=SillyTavern.ToolManager.parseToolCalls.bind(SillyTavern.ToolManager);SillyTavern.ToolManager.parseToolCalls=(a,n)=>{e(a,n),t=a}}for(o=0;o<3;o++){a.通知.额外模型解析中&&toastr.info('[MVU]额外模型分析变量更新中...'+(0===o?'':` 重试 ${o}/3`)),t=void 0;const n=await s('与插头相同'===a.额外模型解析配置.模型来源?{user_input:'遵循后续的 <must> 指令',injects:e,max_chat_history:2,should_stream:a.额外模型解析配置.使用函数调用}:{user_input:'遵循后续的 <must> 指令',custom_api:{apiurl:a.额外模型解析配置.api地址,key:a.额外模型解析配置.密钥,model:a.额外模型解析配置.模型名称},injects:e,should_stream:a.额外模型解析配置.使用函数调用});if(void 0!==t){const e=_.get(t,'[0]');if(e){const t=_(e).findLast(e=>e.function.name===J);if(t){const e=_.get(t,'function.arguments');if(e)try{const t=JSON.parse(e);if(t.delta&&t.delta.length>5){r=`<UpdateVariable><Analyze>${t.analysis}</Analyze>${t.delta}</UpdateVariable>`;break}}catch(t){console.log(`failed to parse function call content,retry: ${e}: ${t}`)}}}}if(console.log(`Vanilla Response: ${n}`),-1!==n.indexOf('<UpdateVariable>')){const e=n.lastIndexOf('<UpdateVariable>'),t=n.slice(e+16).replace(/<\/UpdateVariable>/g,'');if(/_\.(?:set|insert|assign|remove|unset|delete|add)\s*\([\s\S]*?\)\s*;/.test(t)){r=`<UpdateVariable>${t}</UpdateVariable>`;break}}}}catch(t){return console.error(`变量更新请求发生错误: ${t}`),void await k(e)}finally{null!==ye&&(SillyTavern.ToolManager.parseToolCalls=ye,ye=null),SillyTavern.unregisterMacro('lastUserMessage'),G(!1),fe=!1}if(''!==r){const t=getChatMessages(e);await setChatMessages([{message_id:e,message:t[0].message+r}],{refresh:'none'})}else toastr.error('建议调整变量更新方式/额外模型解析模式','[MVU]额外模型分析变量更新失败');await k(e)}$(async()=>{i(await getTavernHelperVersion(),'3.4.17','<')&&toastr.warning('酒馆助手版本过低, 无法正常处理, 请更新至 3.4.17 或更高版本（建议保持酒馆助手最新）','[MVU]不支持当前酒馆助手版本'),await async function(){H=await fetch('/version').then(e=>e.json()).then(e=>e.pkgVersion).catch(()=>'1.0.0')}(),me();const e=S();!1===e.settings.internal.已提醒新配置界面&&(toastr.info('配置界面位于酒馆扩展界面-「正则」下方, 请点开了解新功能或自定义配置','[MVU]已更新独立配置界面',{timeOut:5e3}),e.settings.internal.已提醒新配置界面=!0),function(){const e=R();_.set(window,'Mvu',e),_.set(window.parent,'Mvu',e),eventEmit('global_Mvu_initialized')}(),appendInexistentScriptButtons(P.map(e=>({name:e.name,visible:!1}))),P.forEach(e=>{eventOn(getButtonEvent(e.name),e.function)}),eventOn(tavern_events.GENERATION_STARTED,U),eventOn(tavern_events.MESSAGE_SENT,U),eventOn(tavern_events.MESSAGE_SENT,k),eventOn('worldinfo_entries_loaded',he),eventOn(tavern_events.MESSAGE_RECEIVED,X?ve:_.throttle(ve,3e3)),eventOn(u,C),eventOn(m,x),eventOn(tavern_events.CHAT_COMPLETION_SETTINGS_READY,q),_.set(window.parent,'handleVariablesInMessage',k),function(){const{registerFunctionTool:e}=SillyTavern;if(!e)return void console.debug('MVU: function tools are not supported');const t=Object.freeze({$schema:'http://json-schema.org/draft-04/schema#',type:'object',additionalProperties:!1,properties:{analysis:{type:'string',minLength:1,description:'Write in ENGLISH. A compact reasoning summary that includes: (1) calculate time passed; (2) decide whether dramatic updates are allowed (special case or sufficiently long time); (3) list every variable name that appears in the <status_description> section BEFORE actual variable analysis, without revealing their contents; (4) for each variable, judge whether it satisfies its change conditions and output only Y/N without reasons; (5) only evaluate stories inside <past_observe> block.'},delta:{type:'string',minLength:0,description:'multilines Update statements, includes `_.set`,`_.insert`,`_.assign`,`_.delete`,`_.remove`,`_.add`. example: _.set(\'悠纪.好感度\',35);//愉快的一次讨论，悠纪觉得与你一起是开心的'}},required:['delta']});e({name:J,displayName:'MVU update',stealth:!0,description:'use this tool to UpdateVariable.',parameters:t,shouldRegister:()=>!!B&&S().settings.额外模型解析配置.使用函数调用,action:F,formatMessage:()=>''})}(),toastr.info('构建信息: 2025-10-10T11:10:21.829Z (ef8b743)','[MVU]脚本加载成功')}),$(window).on('pagehide',()=>{null!==ye&&(SillyTavern.ToolManager.parseToolCalls=ye,ye=null),pe(),SillyTavern.unregisterFunctionTool(J),SillyTavern.unregisterFunctionTool('mvu_updateRound')});
//# sourceMappingURL=bundle.js.map